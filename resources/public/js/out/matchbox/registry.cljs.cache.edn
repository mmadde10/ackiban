;; Analyzed by ClojureScript 1.7.122
{:name matchbox.registry, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {walk clojure.walk, clojure.walk clojure.walk}, :imports nil, :defs {unsubs {:name matchbox.registry/unsubs, :file "resources/public/js/out/matchbox/registry.cljs", :line 5, :column 1, :end-line 5, :end-column 16, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 5, :column 10, :end-line 5, :end-column 16}}, unsubs-flat {:name matchbox.registry/unsubs-flat, :file "resources/public/js/out/matchbox/registry.cljs", :line 8, :column 1, :end-line 8, :end-column 21, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 8, :column 10, :end-line 8, :end-column 21}}, register-listener {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 10, :column 7, :end-line 10, :end-column 24, :arglists (quote ([ref type unsub!]))}, :name matchbox.registry/register-listener, :variadic false, :file "resources/public/js/out/matchbox/registry.cljs", :end-column 24, :method-params ([ref type unsub!]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref type unsub!]))}, flatten-vals {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 14, :column 8, :end-line 14, :end-column 20, :private true, :arglists (quote ([xss]))}, :private true, :name matchbox.registry/flatten-vals, :variadic false, :file "resources/public/js/out/matchbox/registry.cljs", :end-column 20, :method-params ([xss]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xss]))}, disable-all! {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 20, :column 8, :end-line 20, :end-column 20, :private true, :arglists (quote ([fs]))}, :private true, :name matchbox.registry/disable-all!, :variadic false, :file "resources/public/js/out/matchbox/registry.cljs", :end-column 20, :method-params ([fs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fs]))}, -cleanup! {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 24, :column 8, :end-line 24, :end-column 17, :private true, :arglists (quote ([data]))}, :private true, :name matchbox.registry/-cleanup!, :variadic false, :file "resources/public/js/out/matchbox/registry.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, cleanup! {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 34, :column 8, :end-line 34, :end-column 16, :private true, :arglists (quote ([])), :doc "Remove empty branches in `unsubs`"}, :private true, :name matchbox.registry/cleanup!, :variadic false, :file "resources/public/js/out/matchbox/registry.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Remove empty branches in `unsubs`"}, disable-listener! {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 39, :column 7, :end-line 39, :end-column 24, :arglists (quote ([unsub!]))}, :name matchbox.registry/disable-listener!, :variadic false, :file "resources/public/js/out/matchbox/registry.cljs", :end-column 24, :method-params ([unsub!]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unsub!]))}, disable-listeners! {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/registry.cljs", :line 46, :column 7, :end-line 46, :end-column 25, :arglists (quote ([& [ref type :as path]])), :doc "Remove all known listeners within appropriate scope.\n\n  By known listeners, we mean listeners that were added with Matchbox.\n\n  The scope is determined by the args:\n\n  0-arity: remove all listeners\n  1-arity: remove all listeners on a given `ref`\n  2-arity: remove all listeners of `type` on a given `ref`\n\n  For removing a single listener, see `disable-listener!`", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([ref type :as path])], :arglists ([& [ref type :as path]]), :arglists-meta (nil)}}, :name matchbox.registry/disable-listeners!, :variadic true, :file "resources/public/js/out/matchbox/registry.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([ref type :as path])], :arglists ([& [ref type :as path]]), :arglists-meta (nil)}, :method-params [([ref type :as path])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists ([& [ref type :as path]]), :doc "Remove all known listeners within appropriate scope.\n\n  By known listeners, we mean listeners that were added with Matchbox.\n\n  The scope is determined by the args:\n\n  0-arity: remove all listeners\n  1-arity: remove all listeners on a given `ref`\n  2-arity: remove all listeners of `type` on a given `ref`\n\n  For removing a single listener, see `disable-listener!`"}}}