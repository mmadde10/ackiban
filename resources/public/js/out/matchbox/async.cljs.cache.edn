;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name matchbox.async, :imports nil, :requires {m matchbox.core, matchbox.core matchbox.core, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {reset-in!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 98, :column 7, :end-line 98, :end-column 17, :arglists (quote ([ref korks val]))}, :name matchbox.async/reset-in!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 17, :method-params ([ref korks val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref korks val]))}, listen-to< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 134, :column 7, :end-line 134, :end-column 17, :arglists (quote ([ref type] [ref korks type])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([ref type] [ref korks type]), :arglists ([ref type] [ref korks type]), :arglists-meta (nil nil)}}, :name matchbox.async/listen-to<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([ref type] [ref korks type]), :arglists ([ref type] [ref korks type]), :arglists-meta (nil nil)}, :method-params ([ref type] [ref korks type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 3, :fn-var true, :arglists ([ref type] [ref korks type])}, merge!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 66, :column 7, :end-line 66, :end-column 14, :arglists (quote ([ref val]))}, :name matchbox.async/merge!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 14, :method-params ([ref val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref val]))}, listen-list< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 140, :column 7, :end-line 140, :end-column 19, :arglists (quote ([ref] [ref korks])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([ref] [ref korks]), :arglists ([ref] [ref korks]), :arglists-meta (nil nil)}}, :name matchbox.async/listen-list<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([ref] [ref korks]), :arglists ([ref] [ref korks]), :arglists-meta (nil nil)}, :method-params ([ref] [ref korks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 2, :fn-var true, :arglists ([ref] [ref korks])}, priority-in< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 126, :column 7, :end-line 126, :end-column 19, :arglists (quote ([ref-or-ds korks]))}, :name matchbox.async/priority-in<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 19, :method-params ([ref-or-ds korks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref-or-ds korks]))}, deref-in< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 92, :column 7, :end-line 92, :end-column 16, :arglists (quote ([ref korks]))}, :name matchbox.async/deref-in<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 16, :method-params ([ref korks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref korks]))}, deref< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 54, :column 7, :end-line 54, :end-column 13, :arglists (quote ([ref]))}, :name matchbox.async/deref<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 13, :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, swap-in!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 110, :column 7, :end-line 110, :end-column 16, :arglists (quote ([ref korks f & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(ref korks f args)], :arglists ([ref korks f & args]), :arglists-meta (nil)}}, :name matchbox.async/swap-in!<, :variadic true, :file "resources/public/js/out/matchbox/async.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(ref korks f args)], :arglists ([ref korks f & args]), :arglists-meta (nil)}, :method-params [(ref korks f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 3, :fn-var true, :arglists ([ref korks f & args])}, chan->cb {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([ch])), :doc "Create callback that pushes non-nil arguments onto given chan"}, :name matchbox.async/chan->cb, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 15, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ch])), :doc "Create callback that pushes non-nil arguments onto given chan"}, dissoc-in!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 115, :column 7, :end-line 115, :end-column 18, :arglists (quote ([ref korks]))}, :name matchbox.async/dissoc-in!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 18, :method-params ([ref korks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref korks]))}, set-priority-in!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 120, :column 7, :end-line 120, :end-column 24, :arglists (quote ([ref korks priority]))}, :name matchbox.async/set-priority-in!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 24, :method-params ([ref korks priority]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref korks priority]))}, export-in< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 123, :column 7, :end-line 123, :end-column 17, :arglists (quote ([ref-or-ds korks]))}, :name matchbox.async/export-in<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 17, :method-params ([ref-or-ds korks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref-or-ds korks]))}, set-priority!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 81, :column 7, :end-line 81, :end-column 21, :arglists (quote ([ref priority]))}, :name matchbox.async/set-priority!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 21, :method-params ([ref priority]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref priority]))}, deref-list-in< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 95, :column 7, :end-line 95, :end-column 21, :arglists (quote ([ref korks]))}, :name matchbox.async/deref-list-in<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 21, :method-params ([ref korks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref korks]))}, conj!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 69, :column 7, :end-line 69, :end-column 13, :arglists (quote ([ref val]))}, :name matchbox.async/conj!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 13, :method-params ([ref val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref val]))}, auth< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([ref email password & [session-only?]])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(ref email password [session-only?])], :arglists ([ref email password & [session-only?]]), :arglists-meta (nil)}}, :name matchbox.async/auth<, :variadic true, :file "resources/public/js/out/matchbox/async.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(ref email password [session-only?])], :arglists ([ref email password & [session-only?]]), :arglists-meta (nil)}, :method-params [(ref email password [session-only?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists ([ref email password & [session-only?]])}, create-user< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 49, :column 7, :end-line 49, :end-column 19, :arglists (quote ([ref email password]))}, :name matchbox.async/create-user<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 19, :method-params ([ref email password]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref email password]))}, reset!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 60, :column 7, :end-line 60, :end-column 14, :arglists (quote ([ref val]))}, :name matchbox.async/reset!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 14, :method-params ([ref val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref val]))}, export< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 84, :column 7, :end-line 84, :end-column 14, :arglists (quote ([ref-or-ds]))}, :name matchbox.async/export<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 14, :method-params ([ref-or-ds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref-or-ds]))}, with-chan {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([f])), :doc "Call a function with a fresh channel, then return the channel"}, :name matchbox.async/with-chan, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Call a function with a fresh channel, then return the channel"}, conj-in!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 107, :column 7, :end-line 107, :end-column 16, :arglists (quote ([ref korks val]))}, :name matchbox.async/conj-in!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 16, :method-params ([ref korks val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref korks val]))}, merge-in!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 104, :column 7, :end-line 104, :end-column 17, :arglists (quote ([ref korks val]))}, :name matchbox.async/merge-in!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 17, :method-params ([ref korks val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref korks val]))}, auth-anon< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 36, :column 7, :end-line 36, :end-column 17, :arglists (quote ([ref & [session-only?]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ref [session-only?])], :arglists ([ref & [session-only?]]), :arglists-meta (nil)}}, :name matchbox.async/auth-anon<, :variadic true, :file "resources/public/js/out/matchbox/async.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ref [session-only?])], :arglists ([ref & [session-only?]]), :arglists-meta (nil)}, :method-params [(ref [session-only?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists ([ref & [session-only?]])}, remove!< {:name matchbox.async/remove!<, :file "resources/public/js/out/matchbox/async.cljs", :line 79, :column 1, :end-line 79, :end-column 14, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 79, :column 6, :end-line 79, :end-column 14}}, chan->cb-once {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 17, :column 7, :end-line 17, :end-column 20, :arglists (quote ([ch])), :doc "Create callback that pushes arguments onto chan at-most once"}, :name matchbox.async/chan->cb-once, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 20, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ch])), :doc "Create callback that pushes arguments onto chan at-most once"}, chan->auth-cb {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([ch])), :doc "Creates a callback to push [err, value] arguments onto a chan, exactly once"}, :name matchbox.async/chan->auth-cb, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 20, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ch])), :doc "Creates a callback to push [err, value] arguments onto a chan, exactly once"}, reset-with-priority!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 63, :column 7, :end-line 63, :end-column 28, :arglists (quote ([ref val priority]))}, :name matchbox.async/reset-with-priority!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 28, :method-params ([ref val priority]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ref val priority]))}, reset-with-priority-in!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 101, :column 7, :end-line 101, :end-column 31, :arglists (quote ([ref korks val priority]))}, :name matchbox.async/reset-with-priority-in!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 31, :method-params ([ref korks val priority]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ref korks val priority]))}, remove-in!< {:name matchbox.async/remove-in!<, :file "resources/public/js/out/matchbox/async.cljs", :line 118, :column 1, :end-line 118, :end-column 17, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 118, :column 6, :end-line 118, :end-column 17}}, deref-list< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 57, :column 7, :end-line 57, :end-column 18, :arglists (quote ([ref]))}, :name matchbox.async/deref-list<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 18, :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, swap!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 72, :column 7, :end-line 72, :end-column 13, :arglists (quote ([ref f & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ref f args)], :arglists ([ref f & args]), :arglists-meta (nil)}}, :name matchbox.async/swap!<, :variadic true, :file "resources/public/js/out/matchbox/async.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ref f args)], :arglists ([ref f & args]), :arglists-meta (nil)}, :method-params [(ref f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists ([ref f & args])}, dissoc!< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 76, :column 7, :end-line 76, :end-column 15, :arglists (quote ([ref]))}, :name matchbox.async/dissoc!<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 15, :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, listen-children< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 146, :column 7, :end-line 146, :end-column 23, :arglists (quote ([ref] [ref korks])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([ref] [ref korks]), :arglists ([ref] [ref korks]), :arglists-meta (nil nil)}}, :name matchbox.async/listen-children<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([ref] [ref korks]), :arglists ([ref] [ref korks]), :arglists-meta (nil nil)}, :method-params ([ref] [ref korks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists ([ref] [ref korks])}, auth-custom< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([ref secret] [ref secret session-only?])), :doc "Authenticates a Firebase client using an authentication token or Firebase Secret.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([ref secret] [ref secret session-only?]), :arglists ([ref secret] [ref secret session-only?]), :arglists-meta (nil nil)}}, :name matchbox.async/auth-custom<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([ref secret] [ref secret session-only?]), :arglists ([ref secret] [ref secret session-only?]), :arglists-meta (nil nil)}, :method-params ([ref secret] [ref secret session-only?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists ([ref secret] [ref secret session-only?]), :doc "Authenticates a Firebase client using an authentication token or Firebase Secret."}, priority< {:protocol-inline nil, :meta {:file "/Users/mmadden/Documents/myRepos/re-frame-firebase-example/resources/public/js/out/matchbox/async.cljs", :line 87, :column 7, :end-line 87, :end-column 16, :arglists (quote ([ref-or-ds]))}, :name matchbox.async/priority<, :variadic false, :file "resources/public/js/out/matchbox/async.cljs", :end-column 16, :method-params ([ref-or-ds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref-or-ds]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{every? args not= p1__12625# fn* :callback}, :order [:callback every? fn* p1__12625# not= args]}, :doc nil}